# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/pages/import_evidence_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_ImportEvidenceDialog(object):
    def setupUi(self, ImportEvidenceDialog):
        ImportEvidenceDialog.setObjectName("ImportEvidenceDialog")
        ImportEvidenceDialog.resize(650, 550)
        ImportEvidenceDialog.setStyleSheet("QDialog {\n"
"    background-color: #f8f9fa;\n"
"}\n"
"\n"
"QGroupBox {\n"
"    font-weight: bold;\n"
"    border: 2px solid #dee2e6;\n"
"    border-radius: 8px;\n"
"    margin-top: 10px;\n"
"    padding-top: 10px;\n"
"    background-color: white;\n"
"}\n"
"\n"
"QGroupBox::title {\n"
"    subcontrol-origin: margin;\n"
"    left: 10px;\n"
"    padding: 0 8px 0 8px;\n"
"    color: #495057;\n"
"}\n"
"\n"
"QPushButton {\n"
"    background-color: #007bff;\n"
"    border: none;\n"
"    color: white;\n"
"    padding: 10px 20px;\n"
"    border-radius: 6px;\n"
"    font-weight: 500;\n"
"    font-size: 14px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #0056b3;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #004085;\n"
"}\n"
"\n"
"QPushButton#importBtn {\n"
"    background-color: #28a745;\n"
"    font-size: 16px;\n"
"    padding: 12px 24px;\n"
"}\n"
"\n"
"QPushButton#importBtn:hover {\n"
"    background-color: #1e7e34;\n"
"}\n"
"\n"
"QPushButton#cancelBtn {\n"
"    background-color: #6c757d;\n"
"}\n"
"\n"
"QPushButton#cancelBtn:hover {\n"
"    background-color: #545b62;\n"
"}\n"
"\n"
"QPushButton#browseBtn {\n"
"    background-color: #17a2b8;\n"
"    padding: 8px 16px;\n"
"}\n"
"\n"
"QPushButton#browseBtn:hover {\n"
"    background-color: #117a8b;\n"
"}\n"
"\n"
"QLineEdit {\n"
"    border: 1px solid #ced4da;\n"
"    border-radius: 4px;\n"
"    padding: 8px 12px;\n"
"    font-size: 14px;\n"
"    background-color: white;\n"
"}\n"
"\n"
"QLineEdit:focus {\n"
"    border-color: #007bff;\n"
"    outline: 0;\n"
"    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\n"
"}\n"
"\n"
"QComboBox {\n"
"    border: 1px solid #ced4da;\n"
"    border-radius: 4px;\n"
"    padding: 8px 12px;\n"
"    background-color: white;\n"
"    min-width: 120px;\n"
"}\n"
"\n"
"QTextEdit {\n"
"    border: 1px solid #ced4da;\n"
"    border-radius: 4px;\n"
"    padding: 8px;\n"
"    background-color: white;\n"
"}\n"
"\n"
"QCheckBox {\n"
"    spacing: 8px;\n"
"    font-size: 14px;\n"
"}\n"
"\n"
"QCheckBox::indicator {\n"
"    width: 18px;\n"
"    height: 18px;\n"
"}\n"
"\n"
"QCheckBox::indicator:unchecked {\n"
"    border: 2px solid #ced4da;\n"
"    border-radius: 3px;\n"
"    background-color: white;\n"
"}\n"
"\n"
"QCheckBox::indicator:checked {\n"
"    border: 2px solid #007bff;\n"
"    border-radius: 3px;\n"
"    background-color: #007bff;\n"
"}\n"
"\n"
"QRadioButton {\n"
"    spacing: 8px;\n"
"    font-size: 14px;\n"
"}\n"
"\n"
"QRadioButton::indicator {\n"
"    width: 18px;\n"
"    height: 18px;\n"
"}\n"
"\n"
"QRadioButton::indicator:unchecked {\n"
"    border: 2px solid #ced4da;\n"
"    border-radius: 9px;\n"
"    background-color: white;\n"
"}\n"
"\n"
"QRadioButton::indicator:checked {\n"
"    border: 2px solid #007bff;\n"
"    border-radius: 9px;\n"
"    background-color: #007bff;\n"
"}\n"
"\n"
"QLabel#titleLabel {\n"
"    color: #343a40;\n"
"    font-size: 18px;\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QLabel#typeDescLabel {\n"
"    color: #6c757d;\n"
"    font-size: 12px;\n"
"    font-style: italic;\n"
"}")
        ImportEvidenceDialog.setModal(True)
        self.mainLayout = QtWidgets.QVBoxLayout(ImportEvidenceDialog)
        self.mainLayout.setContentsMargins(20, 20, 20, 20)
        self.mainLayout.setSpacing(16)
        self.mainLayout.setObjectName("mainLayout")
        self.titleLabel = QtWidgets.QLabel(ImportEvidenceDialog)
        self.titleLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.titleLabel.setObjectName("titleLabel")
        self.mainLayout.addWidget(self.titleLabel)
        self.evidenceTypeGroup = QtWidgets.QGroupBox(ImportEvidenceDialog)
        self.evidenceTypeGroup.setObjectName("evidenceTypeGroup")
        self.evidenceTypeLayout = QtWidgets.QVBoxLayout(self.evidenceTypeGroup)
        self.evidenceTypeLayout.setObjectName("evidenceTypeLayout")
        self.typeSelectionLayout = QtWidgets.QHBoxLayout()
        self.typeSelectionLayout.setObjectName("typeSelectionLayout")
        self.volatileRadio = QtWidgets.QRadioButton(self.evidenceTypeGroup)
        self.volatileRadio.setChecked(True)
        self.volatileRadio.setObjectName("volatileRadio")
        self.typeSelectionLayout.addWidget(self.volatileRadio)
        self.nonVolatileRadio = QtWidgets.QRadioButton(self.evidenceTypeGroup)
        self.nonVolatileRadio.setObjectName("nonVolatileRadio")
        self.typeSelectionLayout.addWidget(self.nonVolatileRadio)
        self.evidenceTypeLayout.addLayout(self.typeSelectionLayout)
        self.typeDescLabel = QtWidgets.QLabel(self.evidenceTypeGroup)
        self.typeDescLabel.setWordWrap(True)
        self.typeDescLabel.setObjectName("typeDescLabel")
        self.evidenceTypeLayout.addWidget(self.typeDescLabel)
        self.mainLayout.addWidget(self.evidenceTypeGroup)
        self.fileSelectionGroup = QtWidgets.QGroupBox(ImportEvidenceDialog)
        self.fileSelectionGroup.setObjectName("fileSelectionGroup")
        self.fileSelectionLayout = QtWidgets.QVBoxLayout(self.fileSelectionGroup)
        self.fileSelectionLayout.setObjectName("fileSelectionLayout")
        self.filePathLayout = QtWidgets.QHBoxLayout()
        self.filePathLayout.setObjectName("filePathLayout")
        self.filePathEdit = QtWidgets.QLineEdit(self.fileSelectionGroup)
        self.filePathEdit.setReadOnly(True)
        self.filePathEdit.setObjectName("filePathEdit")
        self.filePathLayout.addWidget(self.filePathEdit)
        self.browseBtn = QtWidgets.QPushButton(self.fileSelectionGroup)
        self.browseBtn.setObjectName("browseBtn")
        self.filePathLayout.addWidget(self.browseBtn)
        self.fileSelectionLayout.addLayout(self.filePathLayout)
        self.fileSelectionDescLabel = QtWidgets.QLabel(self.fileSelectionGroup)
        self.fileSelectionDescLabel.setWordWrap(True)
        self.fileSelectionDescLabel.setObjectName("fileSelectionDescLabel")
        self.fileSelectionLayout.addWidget(self.fileSelectionDescLabel)
        self.mainLayout.addWidget(self.fileSelectionGroup)
        self.evidenceInfoGroup = QtWidgets.QGroupBox(ImportEvidenceDialog)
        self.evidenceInfoGroup.setObjectName("evidenceInfoGroup")
        self.evidenceInfoLayout = QtWidgets.QGridLayout(self.evidenceInfoGroup)
        self.evidenceInfoLayout.setObjectName("evidenceInfoLayout")
        self.evidenceNameLabel = QtWidgets.QLabel(self.evidenceInfoGroup)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.evidenceNameLabel.setFont(font)
        self.evidenceNameLabel.setObjectName("evidenceNameLabel")
        self.evidenceInfoLayout.addWidget(self.evidenceNameLabel, 0, 0, 1, 1)
        self.evidenceNameEdit = QtWidgets.QLineEdit(self.evidenceInfoGroup)
        self.evidenceNameEdit.setObjectName("evidenceNameEdit")
        self.evidenceInfoLayout.addWidget(self.evidenceNameEdit, 0, 1, 1, 1)
        self.mainLayout.addWidget(self.evidenceInfoGroup)
        self.optionsGroup = QtWidgets.QGroupBox(ImportEvidenceDialog)
        self.optionsGroup.setObjectName("optionsGroup")
        self.optionsLayout = QtWidgets.QVBoxLayout(self.optionsGroup)
        self.optionsLayout.setObjectName("optionsLayout")
        self.optionsRowLayout = QtWidgets.QHBoxLayout()
        self.optionsRowLayout.setObjectName("optionsRowLayout")
        self.calculateHashCheck = QtWidgets.QCheckBox(self.optionsGroup)
        self.calculateHashCheck.setChecked(True)
        self.calculateHashCheck.setObjectName("calculateHashCheck")
        self.optionsRowLayout.addWidget(self.calculateHashCheck)
        self.verifyIntegrityCheck = QtWidgets.QCheckBox(self.optionsGroup)
        self.verifyIntegrityCheck.setChecked(True)
        self.verifyIntegrityCheck.setObjectName("verifyIntegrityCheck")
        self.optionsRowLayout.addWidget(self.verifyIntegrityCheck)
        self.optionsLayout.addLayout(self.optionsRowLayout)
        self.optionsRow2Layout = QtWidgets.QHBoxLayout()
        self.optionsRow2Layout.setObjectName("optionsRow2Layout")
        self.compressCheck = QtWidgets.QCheckBox(self.optionsGroup)
        self.compressCheck.setObjectName("compressCheck")
        self.optionsRow2Layout.addWidget(self.compressCheck)
        self.indexContentCheck = QtWidgets.QCheckBox(self.optionsGroup)
        self.indexContentCheck.setChecked(True)
        self.indexContentCheck.setObjectName("indexContentCheck")
        self.optionsRow2Layout.addWidget(self.indexContentCheck)
        self.optionsLayout.addLayout(self.optionsRow2Layout)
        self.mainLayout.addWidget(self.optionsGroup)
        self.buttonLayout = QtWidgets.QHBoxLayout()
        self.buttonLayout.setSpacing(12)
        self.buttonLayout.setObjectName("buttonLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.buttonLayout.addItem(spacerItem)
        self.cancelBtn = QtWidgets.QPushButton(ImportEvidenceDialog)
        self.cancelBtn.setObjectName("cancelBtn")
        self.buttonLayout.addWidget(self.cancelBtn)
        self.importBtn = QtWidgets.QPushButton(ImportEvidenceDialog)
        self.importBtn.setObjectName("importBtn")
        self.buttonLayout.addWidget(self.importBtn)
        self.mainLayout.addLayout(self.buttonLayout)

        self.retranslateUi(ImportEvidenceDialog)
        QtCore.QMetaObject.connectSlotsByName(ImportEvidenceDialog)

    def retranslateUi(self, ImportEvidenceDialog):
        _translate = QtCore.QCoreApplication.translate
        ImportEvidenceDialog.setWindowTitle(_translate("ImportEvidenceDialog", "Import Evidence"))
        self.titleLabel.setText(_translate("ImportEvidenceDialog", "📥 Import Evidence vào Case"))
        self.evidenceTypeGroup.setTitle(_translate("ImportEvidenceDialog", "Loại Evidence"))
        self.volatileRadio.setText(_translate("ImportEvidenceDialog", "🔴 VOLATILE - Dữ liệu dễ mất (RAM, Processes, Network...)"))
        self.nonVolatileRadio.setText(_translate("ImportEvidenceDialog", "🔵 NON-VOLATILE - Dữ liệu bền vững (Disk, Files, Registry...)"))
        self.typeDescLabel.setText(_translate("ImportEvidenceDialog", "💡 Chọn loại evidence phù hợp với dữ liệu bạn muốn import"))
        self.fileSelectionGroup.setTitle(_translate("ImportEvidenceDialog", "Chọn Files để Import"))
        self.filePathEdit.setPlaceholderText(_translate("ImportEvidenceDialog", "Chọn file(s) để import... (Có thể chọn nhiều files cùng lúc)"))
        self.browseBtn.setText(_translate("ImportEvidenceDialog", "📂 Chọn Files"))
        self.fileSelectionDescLabel.setText(_translate("ImportEvidenceDialog", "🔍 Sử dụng Ctrl+Click để chọn nhiều files. Hệ thống sẽ tự động đặt tên dựa trên tên file nếu không nhập tên riêng."))
        self.evidenceInfoGroup.setTitle(_translate("ImportEvidenceDialog", "Thông tin Evidence (Tùy chọn)"))
        self.evidenceNameLabel.setText(_translate("ImportEvidenceDialog", "Tên Evidence:"))
        self.evidenceNameEdit.setPlaceholderText(_translate("ImportEvidenceDialog", "Để trống để tự động đặt tên theo file (VD: memory_dump.dmp)"))
        self.optionsGroup.setTitle(_translate("ImportEvidenceDialog", "Tùy chọn Import"))
        self.calculateHashCheck.setText(_translate("ImportEvidenceDialog", "Tính toán hash (MD5, SHA1, SHA256)"))
        self.verifyIntegrityCheck.setText(_translate("ImportEvidenceDialog", "Kiểm tra tính toàn vẹn"))
        self.compressCheck.setText(_translate("ImportEvidenceDialog", "Nén dữ liệu để tiết kiệm không gian"))
        self.indexContentCheck.setText(_translate("ImportEvidenceDialog", "Lập chỉ mục nội dung (cho tìm kiếm nhanh)"))
        self.cancelBtn.setText(_translate("ImportEvidenceDialog", "Hủy"))
        self.importBtn.setText(_translate("ImportEvidenceDialog", "✅ Import Evidence"))
