# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\memory_analysis_result_widget.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MemoryAnalysisResultWidget(object):
    def setupUi(self, MemoryAnalysisResultWidget):
        MemoryAnalysisResultWidget.setObjectName("MemoryAnalysisResultWidget")
        MemoryAnalysisResultWidget.resize(950, 680)
        self.mainResultLayout = QtWidgets.QVBoxLayout(MemoryAnalysisResultWidget)
        self.mainResultLayout.setObjectName("mainResultLayout")
        self.resultTabWidget = QtWidgets.QTabWidget(MemoryAnalysisResultWidget)
        self.resultTabWidget.setStyleSheet("QTabWidget::pane {\n"
"    border: 1px solid #C4C4C3;\n"
"    top: -1px; \n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                stop: 0 #f6f7fa, stop: 1.0 #e2e4e8);\n"
"    border: 1px solid #C4C4C3;\n"
"    border-bottom-color: #C2C7CB;\n"
"    border-top-left-radius: 4px;\n"
"    border-top-right-radius: 4px;\n"
"    min-width: 110px; /* Tăng độ rộng tối thiểu */\n"
"    padding: 5px;\n"
"    margin-right: 2px;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,\n"
"                                stop: 0 #e3f2fd, stop: 1.0 #dbe9f6); /* Light blue gradient */\n"
"    border-color: #9B9B9B;\n"
"    border-bottom-color: #e3f2fd; /* Same as background to connect to pane */\n"
"    color: #1976d2; /* Dark blue text */\n"
"    font-weight: bold;\n"
"}\n"
"\n"
"QTabBar::tab:!selected:hover {\n"
"    background: #e6eaf1;\n"
"}")
        self.resultTabWidget.setObjectName("resultTabWidget")
        self.tab_overview = QtWidgets.QWidget()
        self.tab_overview.setObjectName("tab_overview")
        self.verticalLayout_overview = QtWidgets.QVBoxLayout(self.tab_overview)
        self.verticalLayout_overview.setObjectName("verticalLayout_overview")
        self.label_stats = QtWidgets.QLabel(self.tab_overview)
        self.label_stats.setObjectName("label_stats")
        self.verticalLayout_overview.addWidget(self.label_stats)
        self.table_overview = QtWidgets.QTableView(self.tab_overview)
        self.table_overview.setObjectName("table_overview")
        self.verticalLayout_overview.addWidget(self.table_overview)
        self.resultTabWidget.addTab(self.tab_overview, "")
        self.tab_process_tree = QtWidgets.QWidget()
        self.tab_process_tree.setObjectName("tab_process_tree")
        self.verticalLayout_process_tree = QtWidgets.QVBoxLayout(self.tab_process_tree)
        self.verticalLayout_process_tree.setObjectName("verticalLayout_process_tree")
        self.treeView_process = QtWidgets.QTreeView(self.tab_process_tree)
        self.treeView_process.setObjectName("treeView_process")
        self.verticalLayout_process_tree.addWidget(self.treeView_process)
        self.resultTabWidget.addTab(self.tab_process_tree, "")
        self.tab_network = QtWidgets.QWidget()
        self.tab_network.setObjectName("tab_network")
        self.verticalLayout_network = QtWidgets.QVBoxLayout(self.tab_network)
        self.verticalLayout_network.setObjectName("verticalLayout_network")
        self.table_network = QtWidgets.QTableView(self.tab_network)
        self.table_network.setObjectName("table_network")
        self.verticalLayout_network.addWidget(self.table_network)
        self.resultTabWidget.addTab(self.tab_network, "")
        self.tab_malfind = QtWidgets.QWidget()
        self.tab_malfind.setObjectName("tab_malfind")
        self.verticalLayout_malfind = QtWidgets.QVBoxLayout(self.tab_malfind)
        self.verticalLayout_malfind.setObjectName("verticalLayout_malfind")
        self.table_malfind = QtWidgets.QTableView(self.tab_malfind)
        self.table_malfind.setObjectName("table_malfind")
        self.verticalLayout_malfind.addWidget(self.table_malfind)
        self.resultTabWidget.addTab(self.tab_malfind, "")
        self.tab_user_activity = QtWidgets.QWidget()
        self.tab_user_activity.setObjectName("tab_user_activity")
        self.verticalLayout_user_activity = QtWidgets.QVBoxLayout(self.tab_user_activity)
        self.verticalLayout_user_activity.setObjectName("verticalLayout_user_activity")
        self.textedit_cmd = QtWidgets.QTextEdit(self.tab_user_activity)
        self.textedit_cmd.setObjectName("textedit_cmd")
        self.verticalLayout_user_activity.addWidget(self.textedit_cmd)
        self.textedit_clipboard = QtWidgets.QTextEdit(self.tab_user_activity)
        self.textedit_clipboard.setObjectName("textedit_clipboard")
        self.verticalLayout_user_activity.addWidget(self.textedit_clipboard)
        self.resultTabWidget.addTab(self.tab_user_activity, "")
        self.tab_fs_registry = QtWidgets.QWidget()
        self.tab_fs_registry.setObjectName("tab_fs_registry")
        self.verticalLayout_fs_registry = QtWidgets.QVBoxLayout(self.tab_fs_registry)
        self.verticalLayout_fs_registry.setObjectName("verticalLayout_fs_registry")
        self.table_fs = QtWidgets.QTableView(self.tab_fs_registry)
        self.table_fs.setObjectName("table_fs")
        self.verticalLayout_fs_registry.addWidget(self.table_fs)
        self.treeView_registry = QtWidgets.QTreeView(self.tab_fs_registry)
        self.treeView_registry.setObjectName("treeView_registry")
        self.verticalLayout_fs_registry.addWidget(self.treeView_registry)
        self.resultTabWidget.addTab(self.tab_fs_registry, "")
        self.tab_creds_keys = QtWidgets.QWidget()
        self.tab_creds_keys.setObjectName("tab_creds_keys")
        self.verticalLayout_creds_keys = QtWidgets.QVBoxLayout(self.tab_creds_keys)
        self.verticalLayout_creds_keys.setObjectName("verticalLayout_creds_keys")
        self.table_hashdump = QtWidgets.QTableView(self.tab_creds_keys)
        self.table_hashdump.setObjectName("table_hashdump")
        self.verticalLayout_creds_keys.addWidget(self.table_hashdump)
        self.textedit_keys = QtWidgets.QTextEdit(self.tab_creds_keys)
        self.textedit_keys.setObjectName("textedit_keys")
        self.verticalLayout_creds_keys.addWidget(self.textedit_keys)
        self.resultTabWidget.addTab(self.tab_creds_keys, "")
        self.tab_timeline = QtWidgets.QWidget()
        self.tab_timeline.setObjectName("tab_timeline")
        self.verticalLayout_timeline = QtWidgets.QVBoxLayout(self.tab_timeline)
        self.verticalLayout_timeline.setObjectName("verticalLayout_timeline")
        self.graphicsView_timeline = QtWidgets.QGraphicsView(self.tab_timeline)
        self.graphicsView_timeline.setObjectName("graphicsView_timeline")
        self.verticalLayout_timeline.addWidget(self.graphicsView_timeline)
        self.resultTabWidget.addTab(self.tab_timeline, "")
        self.tab_artifacts = QtWidgets.QWidget()
        self.tab_artifacts.setObjectName("tab_artifacts")
        self.verticalLayout_artifacts = QtWidgets.QVBoxLayout(self.tab_artifacts)
        self.verticalLayout_artifacts.setObjectName("verticalLayout_artifacts")
        self.table_artifacts = QtWidgets.QTableView(self.tab_artifacts)
        self.table_artifacts.setObjectName("table_artifacts")
        self.verticalLayout_artifacts.addWidget(self.table_artifacts)
        self.button_export_all = QtWidgets.QPushButton(self.tab_artifacts)
        self.button_export_all.setObjectName("button_export_all")
        self.verticalLayout_artifacts.addWidget(self.button_export_all)
        self.resultTabWidget.addTab(self.tab_artifacts, "")
        self.mainResultLayout.addWidget(self.resultTabWidget)

        self.retranslateUi(MemoryAnalysisResultWidget)
        self.resultTabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MemoryAnalysisResultWidget)

    def retranslateUi(self, MemoryAnalysisResultWidget):
        _translate = QtCore.QCoreApplication.translate
        MemoryAnalysisResultWidget.setWindowTitle(_translate("MemoryAnalysisResultWidget", "Analysis Result"))
        self.label_stats.setText(_translate("MemoryAnalysisResultWidget", "Analysis summary will be displayed here."))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab_overview), _translate("MemoryAnalysisResultWidget", "Overview"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab_process_tree), _translate("MemoryAnalysisResultWidget", "Process Tree"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab_network), _translate("MemoryAnalysisResultWidget", "Network"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab_malfind), _translate("MemoryAnalysisResultWidget", "Malfind"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab_user_activity), _translate("MemoryAnalysisResultWidget", "User Activity"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab_fs_registry), _translate("MemoryAnalysisResultWidget", "FS / Registry"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab_creds_keys), _translate("MemoryAnalysisResultWidget", "Creds / Keys"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab_timeline), _translate("MemoryAnalysisResultWidget", "Timeline"))
        self.button_export_all.setText(_translate("MemoryAnalysisResultWidget", "Export All"))
        self.resultTabWidget.setTabText(self.resultTabWidget.indexOf(self.tab_artifacts), _translate("MemoryAnalysisResultWidget", "Artifacts"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MemoryAnalysisResultWidget = QtWidgets.QWidget()
    ui = Ui_MemoryAnalysisResultWidget()
    ui.setupUi(MemoryAnalysisResultWidget)
    MemoryAnalysisResultWidget.show()
    sys.exit(app.exec_())
